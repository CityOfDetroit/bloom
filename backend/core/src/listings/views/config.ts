import { Views } from "./types"
import { getBaseAddressSelect } from "../../views/base.view"

const views: Views = {
  base: {
    select: [
      "listings.id",
      "listings.name",
      "listings.applicationDueDate",
      "listings.applicationOpenDate",
      "listings.reviewOrderType",
      "listings.status",
      "listings.assets",
      "image.id",
      "image.fileId",
      "image.label",
      "jurisdiction.id",
      "jurisdiction.name",
      "reservedCommunityType.id",
      "reservedCommunityType.name",
      "property.id",
      ...getBaseAddressSelect(["buildingAddress"]),
      "unitsSummary.id",
      "summaryUnitType.name",
      "unitsSummary.monthlyRentMin",
      "unitsSummary.monthlyRentMax",
      "unitsSummary.monthlyRentAsPercentOfIncome",
      "unitsSummary.amiPercentage",
      "unitsSummary.minimumIncomeMin",
      "unitsSummary.minimumIncomeMax",
      "unitsSummary.maxOccupancy",
      "unitsSummary.minOccupancy",
      "unitsSummary.floorMin",
      "unitsSummary.floorMax",
      "unitsSummary.sqFeetMin",
      "unitsSummary.sqFeetMax",
      "priorityType.id",
      "unitsSummary.totalCount",
      "unitsSummary.totalAvailable",
      "features.id",
      "features.elevator",
      "features.wheelchairRamp",
      "features.serviceAnimalsAllowed",
      "features.accessibleParking",
      "features.parkingOnSite",
      "features.inUnitWasherDryer",
      "features.barrierFreeEntrance",
      "features.rollInShower",
      "features.grabBars",
      "features.heatingInUnit",
      "features.acInUnit",
      "features.laundryInBuilding",
    ],
    leftJoins: [
      { join: "listings.jurisdiction", alias: "jurisdiction" },
      { join: "listings.image", alias: "image" },
      { join: "listings.property", alias: "property" },
      { join: "property.buildingAddress", alias: "buildingAddress" },
      { join: "listings.reservedCommunityType", alias: "reservedCommunityType" },
      { join: "listings.unitsSummary", alias: "unitsSummary" },
      { join: "unitsSummary.unitType", alias: "summaryUnitType" },
      { join: "unitsSummary.priorityType", alias: "priorityType" },
      { join: "listings.features", alias: "features" },
    ],
  },
}

views.partnerList = {
  select: [
    "listings.id",
    "listings.name",
    "listings.applicationDueDate",
    "listings.status",
    "listings.waitlistMaxSize",
    "listings.waitlistCurrentSize",
    "property.unitsAvailable",
  ],
  leftJoins: [{ join: "listings.property", alias: "property" }],
}

views.detail = {
  select: [
    ...views.base.select,
    "listings.additionalApplicationSubmissionNotes",
    "listings.applicationFee",
    "listings.applicationOrganization",
    "listings.applicationPickUpAddressOfficeHours",
    "listings.applicationPickUpAddressType",
    "listings.applicationDropOffAddressOfficeHours",
    "listings.applicationDropOffAddressType",
    "listings.applicationMailingAddressType",
    "listings.buildingSelectionCriteria",
    "listings.costsNotIncluded",
    "listings.creditHistory",
    "listings.criminalBackground",
    "listings.depositMin",
    "listings.depositMax",
    "listings.disableUnitsAccordion",
    "listings.jurisdiction",
    "listings.leasingAgentEmail",
    "listings.leasingAgentName",
    "listings.leasingAgentOfficeHours",
    "listings.leasingAgentPhone",
    "listings.leasingAgentTitle",
    "listings.postmarkedApplicationsReceivedByDate",
    "listings.programRules",
    "listings.rentalAssistance",
    "listings.rentalHistory",
    "listings.requiredDocuments",
    "listings.specialNotes",
    "listings.whatToExpect",
    "listings.displayWaitlistSize",
    "listings.reservedCommunityDescription",
    "listings.reservedCommunityMinAge",
    "listings.resultLink",
    "listings.isWaitlistOpen",
    "listings.waitlistOpenSpots",
    "listings.customMapPin",
    "listings.features",
    "buildingSelectionCriteriaFile.id",
    "buildingSelectionCriteriaFile.fileId",
    "buildingSelectionCriteriaFile.label",
    "applicationMethods.id",
    "applicationMethods.label",
    "applicationMethods.externalReference",
    "applicationMethods.acceptsPostmarkedApplications",
    "applicationMethods.phoneNumber",
    "applicationMethods.type",
    "paperApplications.id",
    "paperApplications.language",
    "paperApplicationFile.id",
    "paperApplicationFile.fileId",
    "paperApplicationFile.label",
    "listingEvents.id",
    "listingEvents.type",
    "listingEvents.startTime",
    "listingEvents.endTime",
    "listingEvents.url",
    "listingEvents.note",
    "listingEvents.label",
    "listingEventFile.id",
    "listingEventFile.fileId",
    "listingEventFile.label",
    "result.id",
    "result.fileId",
    "result.label",
    ...getBaseAddressSelect([
      "leasingAgentAddress",
      "applicationPickUpAddress",
      "applicationMailingAddress",
      "applicationDropOffAddress",
    ]),
    "leasingAgents.firstName",
    "leasingAgents.lastName",
    "leasingAgents.email",
    "listingPreferencesPreference.title",
    "listingPreferencesPreference.subtitle",
    "listingPreferencesPreference.description",
    "listingPreferencesPreference.ordinal",
    "listingPreferencesPreference.links",
    "listingPreferencesPreference.formMetadata",
  ],
  leftJoins: [
    ...views.base.leftJoins,
    { join: "listings.applicationMethods", alias: "applicationMethods" },
    { join: "applicationMethods.paperApplications", alias: "paperApplications" },
    { join: "paperApplications.file", alias: "paperApplicationFile" },
    { join: "listings.buildingSelectionCriteriaFile", alias: "buildingSelectionCriteriaFile" },
    { join: "listings.events", alias: "listingEvents" },
    { join: "listingEvents.file", alias: "listingEventFile" },
    { join: "listings.result", alias: "result" },
    { join: "listings.leasingAgentAddress", alias: "leasingAgentAddress" },
    { join: "listings.applicationPickUpAddress", alias: "applicationPickUpAddress" },
    { join: "listings.applicationMailingAddress", alias: "applicationMailingAddress" },
    { join: "listings.applicationDropOffAddress", alias: "applicationDropOffAddress" },
    { join: "listings.leasingAgents", alias: "leasingAgents" },
  ],
}

views.full = {
  leftJoinAndSelect: [
    ["listings.applicationMethods", "applicationMethods"],
    ["applicationMethods.paperApplications", "paperApplications"],
    ["paperApplications.file", "paperApplicationFile"],
    ["listings.image", "image"],
    ["listings.buildingSelectionCriteriaFile", "buildingSelectionCriteriaFile"],
    ["listings.events", "listingEvents"],
    ["listingEvents.file", "listingEventFile"],
    ["listings.result", "result"],
    ["listings.leasingAgentAddress", "leasingAgentAddress"],
    ["listings.applicationPickUpAddress", "applicationPickUpAddress"],
    ["listings.applicationMailingAddress", "applicationMailingAddress"],
    ["listings.applicationDropOffAddress", "applicationDropOffAddress"],
    ["listings.leasingAgents", "leasingAgents"],
    ["listings.listingPreferences", "listingPreferences"],
    ["listingPreferences.preference", "listingPreferencesPreference"],
    ["listings.property", "property"],
    ["property.buildingAddress", "buildingAddress"],
    ["property.units", "units"],
    ["units.amiChartOverride", "amiChartOverride"],
    ["units.unitType", "unitTypeRef"],
    ["units.unitRentType", "unitRentType"],
    ["units.priorityType", "priorityType"],
    ["units.amiChart", "amiChart"],
    ["listings.jurisdiction", "jurisdiction"],
    ["listings.reservedCommunityType", "reservedCommunityType"],
    ["listings.unitsSummary", "unitsSummary"],
    ["unitsSummary.unitType", "summaryUnitType"],
    ["unitsSummary.priorityType", "summaryPriorityType"],
    ["listings.features", "features"],
    ["listings.listingPrograms", "listingPrograms"],
    ["listingPrograms.program", "listingProgramsProgram"],
  ],
}

export { views }
