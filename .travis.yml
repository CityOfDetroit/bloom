language: node_js
node_js:
- 14
cache:
  yarn: true
services:
- redis-server
before_install:
- sudo sed -i -e '/local.*peer/s/postgres/all/' -e 's/peer\|md5/trust/g' /etc/postgresql/*/main/pg_hba.conf
- sudo systemctl restart postgresql@11-main
- sleep 1
before_script:
- cp sites/public/.env.template sites/public/.env
- cp sites/partners/.env.template sites/partners/.env
- cp backend/core/.env.template backend/core/.env
jobs:
  include:
  - script: yarn test:shared:ui
    name: UI components tests
  - script: yarn build:app:public
    name: Build public site
  - script: yarn build:app:partners
    name: Build partners site
  - script: yarn test:backend:core:testdbsetup && yarn test:backend:core
    name: Backend unit tests
  - script: yarn test:e2e:backend:core
    name: Backend e2e tests
  - script: yarn test:public:unit-tests
    name: Public site unit tests
  - stage: longer tests
    name: Partners site Cypress tests
    script:
    - yarn cypress install
    - cd backend/core
    - yarn db:reseed:detroit
    - yarn nest start &
    - cd ../../sites/partners
    - yarn build
    - yarn start -p 3001 &
    - yarn wait-on "http-get://localhost:3001" && yarn cypress run
    - kill $(jobs -p) || true
  - stage: longer tests
    name: Public site Cypress tests
    script:
    - yarn cypress install
    - yarn db:reseed
    - cd backend/core
    - yarn nest start &
    - cd ../../sites/public
    - yarn build
    - yarn start -p 3000 &
    - yarn wait-on "http-get://localhost:3000" && yarn cypress run
    - kill $(jobs -p) || true
addons:
  postgresql: '11'
  apt:
    packages:
    - postgresql-11
    - postgresql-client-11
    - libgconf-2-4
env:
  global:
  - PGPORT=5433 PGUSER=travis DATABASE_URL=postgres://localhost:5433/bloom_detroit
    TEST_DATABASE_URL=postgres://localhost:5433/bloom_test REDIS_TLS_URL=redis://127.0.0.1:6379/0
    NEW_RELIC_ENABLED=false NEW_RELIC_LOG_ENABLED=false CLOUDINARY_SIGNED_PRESET=fake_secret
  - secure: iVBAxWMlvmBTcSq5qQhASJauYaL9IhA45e4J2WCL9ybf07aAqbpTSPG7O/V+ZBQ7mHRx9Io6U5SZVIYOhKoCwjIdSQeyzikeppRFJZwgC1T1cPqeIIWLRNjSVL+kmyPSjwZxNZTJsferlQYX/wLHteX3Rq6/kBvb2WKjwNu/mF66y7xdER0JpLgMQ3V6bGz1Ji16GVY7LYsbOdwCI1pGH/Q3swCXnLZlBixRtCEy+yFQzaz60WZgjLlDyM60+5TcvtcZFPZuO5LNyJd29iSqbR2t0EsvBTxs9j9GC8a4ySLcPK9qMOme2q3O8b/5CzC1CmjUW6XmXsd5LXyHNV+JTx/DotkTzk5k972z8awxzG+VDiTEO04zGqUQfhRi2IAgGYz0zFsRwO5pKLEnbQz5LOCC12zy1s+2d2OE9OoW/xOEQjVz/4QJr8Z49UWze1p5Y3rRUx4+++Di0A8vPufYHAkmUmxZP/Qguj0ngAn+GnFk/82UpilW/HWwkDUit6pz+xVvDTJ9eCkJYwfZkrAw3qFYm73PkYkI1HR0puMKX0V/rGY3r18nZzPpzUltAZQblSZKexqpcZKGu8avcNxHUXtKS6BY462XxCG4HUuwyrRH9N7e5Tos13rI4X18jCnWdKQ0jB4szpFOfqxqzuvyQ7UMwRYt0qantXhkDVo7qvo=
  - secure: RJB9fOl4VwQBphdMDd0mTTmCgChwQ+AsyFdc+d8Dfc8/0IhcJNPoZIyKF04bK/VN9hr8ehT8oaRTnkO9yxIP3PhG8PN384ft6YYECiBl9U0Aki6/hgKKF+/KuzuPtJyQBiLWyYi8RbKa9mG93/4q7W2ISHbP3MwIrw4E2sbA/3HyxnTd40V26kK2rkFflNE+DENLJGLwSopJhtszBKdB3J8OpQx4TIHd3wYaszB1slkOndYKAgQsoi3/D35DVInoQ3Ar9hN+egaCcqAOWqSzI78FzxEt+vijKTAogBZpCI669lSDt40uAPWinkJMx+fWAETAjj2GKo3HfanYDB2C/SDnLN15AaBE6ZsWz5mH4cVchppyF/CDjZCHKzRXwIUwoIivI7VIxPuppmx+752nLWKucx1ehxBjOkSfpTEVFgkPd67m0f+pLFs58jy6pNtgbgNxo8lbtI7Yxqin08TceS4LV5pbaHR9tMs74xvVr52RrDZZKIL6JJGWipBiAVh41u85+QRzBNJjjKgn3SQbrit3pP6JqIIG+pXT+ckwlcfOKkWvPd6KEIuTDeN7XJmzHkY+e9qH2E3xiNAHhhkv8qdpSO1FqQquK9Bo0JCEkiqa71/D2us5dnu8GGHJlBOZ3OzGDDCW1rcFaJe1jiaCztnz0q2GjKUNFp0oArIzks0=
  - secure: q5e3TZi7GVwOvnPuYzUJDiRCYDyuiLuiR3WgRxkppc4TByN0UTM8YAQZ+VfkT7z9zRvjV909KuCyQ3MjvJ7ECVfady1CJIwBfR8JXGp+VTlkXLxTODhz2jBDj6A1CUvRL5oE//ocza5wrh5G4e/fAwVfINYEY9oERb+nF6U9YM1rBZG5R+KEeOs20xhdO6v3Yl2t8zmGwzNglFDgVsE3npRt/HVEVs94PW+wltyngXWxKKD/k7YbH0F2T0agNOKxXNe3pL5ZJVALNXOEwWYSaf6NmiceieJE4R0oWPt/JYpg6O5ppkmQTfDoUJLnOFBd7O++S8gY9XkiWNZpTzf23dDuGp9AlrAsbe9zme7RV7mitaFd00f09q1z/bRx/x4m4BnTW9Bh3wNn45C5jVT172lwbpCDcYcOZ7uByi0jV1EOl/hyonwB4O+4Z5p1UOVZ+Fj5a7H8x25O08c8yCsGMaPLIqW8yfArb/tw6syoMWWQ3mwZ/BS+uw6IAj/CmEJf95foU52pzTm98wwBO7kbZSJ76WI6Ye0FC9G0WgWg+HdXLwDm+JKNUvVediy6AMa3Wi3jP3q4QK6dayWpIzQ99MbP3KviE3ZAdvi9pNvEm63lgUumvth9DSsyJHof45P7v9s0Kn1vpTtZgocs3xRMF8DzYcIBOGE44T6QL8kxsc4=
